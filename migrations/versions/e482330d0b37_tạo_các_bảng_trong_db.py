"""Tạo các bảng trong DB

Revision ID: e482330d0b37
Revises: 
Create Date: 2022-06-09 12:23:01.405576

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = "e482330d0b37"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cinemas",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("hotline", sa.String(length=20), nullable=True),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="POINT", from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # op.create_index('idx_cinemas_geom', 'cinemas', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_table(
        "movies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("img", sa.String(), nullable=False),
        sa.Column("describe", sa.Text(), nullable=True),
        sa.Column("director", sa.String(length=50), nullable=False),
        sa.Column("cast", sa.Text(), nullable=False),
        sa.Column("genre", sa.Text(), nullable=False),
        sa.Column("release_date", sa.Date(), nullable=False),
        sa.Column("running_time", sa.String(length=50), nullable=False),
        sa.Column("language", sa.Text(), nullable=True),
        sa.Column("rated", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fullname", sa.String(length=120), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(length=10), nullable=False),
        sa.Column("dob", sa.String(length=20), nullable=False),
        sa.Column("gender", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone_number"),
    )
    op.create_table(
        "movie_distributions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cinema_id", sa.Integer(), nullable=False),
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cinema_id"],
            ["cinemas.id"],
        ),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.id"],
        ),
        sa.PrimaryKeyConstraint("id", "cinema_id", "movie_id"),
    )
    op.create_table(
        "movie_showtimes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("screening_date", sa.String(length=50), nullable=False),
        sa.Column("time_start", sa.String(length=20), nullable=True),
        sa.Column("seats", sa.Integer(), nullable=True),
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tickets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("price", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("cinema_id", sa.Integer(), nullable=False),
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cinema_id"],
            ["cinemas.id"],
        ),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # op.drop_table("spatial_ref_sys")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "spatial_ref_sys",
        sa.Column("srid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "auth_name", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column("auth_srid", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "srtext", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
        ),
        sa.Column(
            "proj4text", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
        ),
        sa.CheckConstraint(
            "(srid > 0) AND (srid <= 998999)", name="spatial_ref_sys_srid_check"
        ),
        sa.PrimaryKeyConstraint("srid", name="spatial_ref_sys_pkey"),
    )
    op.drop_table("tickets")
    op.drop_table("movie_showtimes")
    op.drop_table("movie_distributions")
    op.drop_table("users")
    op.drop_table("movies")
    op.drop_index(
        "idx_cinemas_geom",
        table_name="cinemas",
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.drop_table("cinemas")
    # ### end Alembic commands ###
